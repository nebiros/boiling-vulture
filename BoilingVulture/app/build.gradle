apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'

android {
  compileSdkVersion rootProject.ext.compileSdkVersion
  buildToolsVersion rootProject.ext.buildToolsVersion

  defaultConfig {
    applicationId "im.juan.boilingvulture"
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion
    versionCode 1
    versionName "1.0"

    testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'

    buildConfigField "String", "API_BASE_URL", '\"http://api.fixer.io\"'
  }

  buildTypes {
    debug {
      minifyEnabled true
      // Uses new built-in shrinker http://tools.android.com/tech-docs/new-build-system/built-in-shrinker
      useProguard false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
    }

    release {
      minifyEnabled true
      useProguard true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
    }
  }

  productFlavors {
    mock {
      applicationIdSuffix = ".mock"
    }

    prod {

    }
  }

  android.variantFilter { variant ->
    if (variant.buildType.name.equals('release') && variant.getFlavors().
        get(0).name.
        equals('mock')) {
      variant.setIgnore(true);
    }
  }

  testOptions.unitTests.all {
    testLogging {
      events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
}

dependencies {
  compile "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
  compile "com.android.support:cardview-v7:$rootProject.ext.supportLibraryVersion"
  compile "com.android.support:design:$rootProject.ext.supportLibraryVersion"
  compile "com.android.support:recyclerview-v7:$rootProject.ext.supportLibraryVersion"
  compile "com.android.support:support-v4:$rootProject.ext.supportLibraryVersion"
  compile "com.android.support.test.espresso:espresso-idling-resource:$rootProject.ext.espressoVersion"
  compile "io.reactivex:rxandroid:$rootProject.ext.rxAndroidVersion"
  compile "io.reactivex:rxjava:$rootProject.ext.rxJavaVersion"
  compile("com.squareup.retrofit2:retrofit:$rootProject.ext.retrofit2Version") {
    exclude module: 'okhttp'
  }
  compile "com.squareup.okhttp3:okhttp:$rootProject.ext.okhttp3Version"
  compile "com.squareup.okhttp3:logging-interceptor:$rootProject.ext.okhttp3Version"
  compile "com.squareup.retrofit2:converter-moshi:$rootProject.ext.retrofit2Version"
  compile "com.squareup.retrofit2:adapter-rxjava:$rootProject.ext.retrofit2Version"
  compile "com.jakewharton.timber:timber:$rootProject.ext.timberVersion"

  // dagger
  apt "com.google.dagger:dagger-compiler:$rootProject.ext.daggerVersion"
  provided 'org.glassfish:javax.annotation:10.0-b28'
  compile "com.google.dagger:dagger:$rootProject.ext.daggerVersion"

  testCompile "junit:junit:$rootProject.ext.junitVersion"
  testCompile "org.mockito:mockito-all:$rootProject.ext.mockitoVersion"
  testCompile "org.hamcrest:hamcrest-all:$rootProject.ext.hamcrestVersion"
}
